// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  telegramId   String        @unique
  username     String
  firstName    String
  lastName     String
  hash         String
  authDate     DateTime
  photoUrl     String?
  role         Role          @default(uesr)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

enum Role {
  uesr
  admin
}

model Transaction {
  amount         Decimal
  bank_provider  String
  chain          String
  chargeId       String   @unique
  code           String   @unique
  createAt       DateTime @default(now())
  email          String
  exchangeRate   Decimal
  id             String   @id @default(uuid())
  phoneName      String
  phoneNum       String
  phoneNumber    String
  qr_url         String
  quantity       Float
  status         Status   @default(waiting)
  timeToExpired  Int
  transactionFee Decimal
  updateAt       DateTime @updatedAt
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  walletAddress  String
  redirect_ssl   String
  telegramId     String
}

enum Status {
  waiting
  success
  timeout
  unknow
  cancel
}

model Chain {
  createAt DateTime    @updatedAt
  id       String      @id @default(uuid())
  name     String
  value    String
  status   StatusChain @default(active)
  updateAt DateTime    @default(now())
}

enum StatusChain {
  active
  disable
  maintenance
}
